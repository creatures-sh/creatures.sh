---
import { twJoin } from 'tailwind-merge'
import { format } from 'date-fns'
import { Image } from 'astro:assets'
import { getEntry, getCollection, type CollectionEntry } from 'astro:content'
import type { GetStaticPaths } from 'astro'

import Layout from '@/components/layout.astro'
import WriteBanner from '@/components/write-banner.astro'
import { featuredImages } from '@/utils/featured-images'

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = await getCollection('blog')

  return posts.map((post) => ({
    params: {
      slug: post.slug,
    },
    props: {
      post,
    },
  }))
}

type Props = {
  post: CollectionEntry<'blog'>
}

const { post } = Astro.props
const featuredImage = featuredImages[post.data.image]

const author = await getEntry('authors', post.data.author.slug)

const { Content, remarkPluginFrontmatter, headings } = await post.render()

const ogImageUrl = `${Astro.url.origin}/og/article.png?${new URLSearchParams({
  url: Astro.url.origin,
  image: post.data.image ?? 'featured-1.jpg',
  author: author?.data.username ?? 'nikolovlazar',
  title: post.data.title,
}).toString()}`
---

<Layout
  seo={{
    title: post.data.title,
    description: post.data.excerpt,
    openGraph: {
      basic: {
        title: post.data.title,
        image: ogImageUrl,
        type: 'article',
      },
      article: {
        publishedTime: post.data.publishDate.toString(),
        modifiedTime: post.data.updateDate.toString(),
        authors: [
          `https://twitter.com/${author?.data.twitter || '@NikolovLazar'}`,
        ],
        tags: post.data.tags,
        section: post.data.tags[0],
      },
    },
    twitter: { creator: author?.data.twitter, image: ogImageUrl },
    canonical: post.data.canonicalUrl,
  }}
  class='pb-20 lg:pb-40'
>
  <section
    class='max-lg:hidden absolute inset-x-0 top-[96px] lg:top-0 w-full h-0 lg:h-[40vh] overflow-hidden after:bg-noise-texture after:absolute after:inset-0 after:bg-auto after:bg-repeat after:opacity-[0.8] after:mix-blend-overlay'
  >
    <Image
      src={featuredImage}
      alt={`Featured image of the article: ${post.data.title}`}
      class='w-full h-full object-center object-cover absolute inset-0 z-0 animate-smooth-enter-top'
    />
    <div class='hero-backdrop'></div>
  </section>
  <div class='max-lg:hidden lg:h-[42vh] lg:-mt-20'></div>
  <h1 class='lg:hidden mb-10 max-lg:text-center leading-tight'>
    {post.data.title}
  </h1>
  <div class='flex items-center max-lg:justify-center gap-3 my-6'>
    <a
      href={`/authors/${post.data.author.slug}/`}
      class='flex items-center gap-1.5 z-10 text-link font-medium hover:underline hover:underline-offset-2'
    >
      <img
        class='rounded-full'
        width='24'
        height='24'
        alt={`A photo of ${author?.data.name}`}
        src={author?.data.avatar.src}
      />
      <p class='text-tertiary'>{author?.data.username}</p>
    </a>
    <p class='text-tertiary lg:hidden'>・</p>
    <hr class='max-lg:hidden flex-1 border-border' />
    <p class='text-sm text-tertiary'>
      {format(post.data.publishDate, 'MMM d, yyyy')}
      ・
      {Math.round(remarkPluginFrontmatter?.estReadingTime)} min read
    </p>
  </div>

  <div
    class='grid grid-cols-1 lg:max-xl:grid-cols-3 xl:grid-cols-[1fr_65ch_1fr] gap-3 relative lg:mt-12'
  >
    <div
      class='hidden lg:flex flex-col gap-3 lg:px-8 py-4 lg:py-12 h-fit lg:sticky top-8 xl:col-start-3'
    >
      <span class='text-sm font-bold text-secondary py-3'>ON THIS PAGE</span>
      <ul id='toc'>
        {
          headings.map(
            ({
              depth,
              slug,
              text,
            }: {
              depth: number
              slug: string
              text: string
            }) => (
              <li class='flex w-full'>
                <a
                  class={twJoin(
                    'py-2 px-0 lg:px-2 w-full hover:bg-panel-hover rounded-md',
                    depth === 3 && 'pl-2 lg:pl-4',
                    depth === 4 && 'pl-4 lg:pl-6',
                    depth === 5 && 'pl-6 lg:pl-8',
                    depth === 6 && 'pl-8 lg:pl-10',
                  )}
                  href={`#${slug}`}
                >
                  {text}
                </a>
              </li>
            ),
          )
        }
      </ul>
    </div>
    <div
      id='content'
      class='xl:col-start-2 row-start-2 lg:row-start-1 lg:max-xl:col-span-2 prose-xl prose-slate dark:prose-invert prose-pre:leading-snug prose-headings:no-underline prose-ol:list-decimal prose-ul:list-disc prose-strong:font-bold'
    >
      <h1 class='max-lg:hidden mb-10 max-lg:text-center leading-tight'>
        {post.data.title}
      </h1>
      <Content />
    </div>
  </div>
  <div class='my-20 lg:my-40 flex justify-center items-center gap-4'>
    <p class='font-heading'>Tags:</p>
    {
      post.data.tags.map((tag: string) => (
        <a
          href={`/blog/${tag}/1/`}
          class='px-4 py-3 bg-panel hover:bg-panel-hover rounded-full font-heading'
        >
          #{tag}
        </a>
      ))
    }
  </div>
  <WriteBanner />
</Layout>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const id = entry.target.parentElement?.getAttribute('id')

      if (entry.intersectionRatio > 0) {
        document
          .querySelectorAll(`#toc li`)
          .forEach((li) => li.classList.remove('active'))

        document
          .querySelector(`#toc li a[href="#${id}"]`)
          ?.parentElement?.classList.add('active')
      }
    })
  })

  document
    .querySelectorAll('#content *:is(h2, h3, h4, h5, h6) a[href^="#"]')
    .forEach((heading) => {
      observer.observe(heading)
    })
</script>

<style is:global>
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  [id^='user-content-fn'] {
    @apply scroll-mt-24;
  }

  a[id^='user-content-fnref'],
  a[class^='data-footnote-backref'] {
    @apply text-link;
  }

  #content a:hover {
    text-decoration: underline;
  }

  #content pre * {
    @apply font-mono;
  }
</style>

<style>
  .hero-backdrop {
    @apply absolute inset-0 z-10;
    background: radial-gradient(
      54.85% 54.85% at 50% 45.15%,
      rgba(2, 2, 9, 0) 0%,
      rgba(2, 2, 9, 0.67) 44.84%,
      #020209 100%
    );
  }

  #toc :global(li.active) {
    @apply text-link;
  }

  :global(p > a) {
    @apply text-link;
  }

  :global(code) {
    background-color: theme('colors.gray.900');
    padding: theme('spacing.1');
    border-radius: theme('borderRadius.md');
    border-width: 1px;
    border-color: theme('colors.gray.800');
  }
  :global(pre > code) {
    background-color: transparent;
    padding: 0;
    border-radius: 0;
    border-width: 0;
    border-color: transparent;
  }
</style>
